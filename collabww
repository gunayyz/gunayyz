
User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ pwd
/c/Users/User/Desktop

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ https://github.com/fatima-28/ex2.git
bash: https://github.com/fatima-28/ex2.git: No such file or directory

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ git clone https://github.com/fatima-28/ex2.git
Cloning into 'ex2'...
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Receiving objects: 100% (3/3), done.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd ex2

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/ex2 (main)
$ git add g.txt

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/ex2 (main)
$ git commit -m "slm ftme ncsn"
[main c22f840] slm ftme ncsn
 1 file changed, 1 insertion(+)
 create mode 100644 g.txt

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/ex2 (main)
$ git branch -M main

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/ex2 (main)
$ git remote add origin https://github.com/fatima-28/ex2.git
error: remote origin already exists.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/ex2 (main)
$ git push -u origin main
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 16 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 281 bytes | 281.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/fatima-28/ex2.git
   134c651..c22f840  main -> main
branch 'main' set up to track 'origin/main'.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/ex2 (main)
$ cd ..

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ git clone https://github.com/gunayyz/testgunay.git
Cloning into 'testgunay'...
remote: Enumerating objects: 9, done.
remote: Counting objects: 100% (9/9), done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 9 (delta 1), reused 7 (delta 1), pack-reused 0
Receiving objects: 100% (9/9), done.
Resolving deltas: 100% (1/1), done.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ git add gyny.txt
fatal: pathspec 'gyny.txt' did not match any files

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd
.git/               ex2/                testgunay/
README.md           folder1/            testgunay-main/
YOXLAMA/            gunayfatime collab/ testing/
desktop.ini         how/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd test
testgunay/ testing/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd testgunay/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git add gyny.txt

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git commit -m "yine me"
[main 746f87d] yine me
 1 file changed, 1 insertion(+)
 create mode 100644 gyny.txt

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git branch -M
fatal: branch name required

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$  git branch -M main

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git remote add origin https://github.com/gunayyz/testgunay.git
error: remote origin already exists.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git push -u origin main
To https://github.com/gunayyz/testgunay.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/gunayyz/testgunay.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$

git pull -u origin main
error: unknown switch `u'
usage: git pull [<options>] [<repository> [<refspec>...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    --recurse-submodules[=<on-demand>]
                          control for recursive fetching of submodules

Options related to merging
    -r, --rebase[=(false|true|merges|interactive)]
                          incorporate changes by rebasing rather than merging
    -n                    do not show a diffstat at the end of the merge
    --stat                show a diffstat at the end of the merge
    --log[=<n>]           add (at most <n>) entries from shortlog to merge commi
t message
    --signoff[=...]       add a Signed-off-by trailer
    --squash              create a single commit instead of doing a merge
    --commit              perform a commit if the merge succeeds (default)
    --edit                edit message before committing
    --cleanup <mode>      how to strip spaces and #comments from message
    --ff                  allow fast-forward
    --ff-only             abort if fast-forward is not possible
    --verify              control use of pre-merge-commit and commit-msg hooks
    --verify-signatures   verify that the named commit has a valid GPG signature
    --autostash           automatically stash/stash pop before and after
    -s, --strategy <strategy>
                          merge strategy to use
    -X, --strategy-option <option=value>
                          option for selected merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --allow-unrelated-histories
                          allow merging unrelated histories

Options related to fetching
    --all                 fetch from all remotes
    -a, --append          append to .git/FETCH_HEAD instead of overwriting
    --upload-pack <path>  path to upload pack on remote end
    -f, --force           force overwrite of local branch
    -t, --tags            fetch all tags and associated objects
    -p, --prune           prune remote-tracking branches no longer on remote
    -j, --jobs[=<n>]      number of submodules pulled in parallel
    --dry-run             dry run
    -k, --keep            keep downloaded pack
    --depth <depth>       deepen history of shallow clone
    --shallow-since <time>
                          deepen history of shallow repository based on time
    --shallow-exclude <revision>
                          deepen history of shallow clone, excluding rev
    --deepen <n>          deepen history of shallow clone
    --unshallow           convert to a complete repository
    --update-shallow      accept refs that update .git/shallow
    --refmap <refmap>     specify fetch refmap
    -o, --server-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only
    --negotiation-tip <revision>
                          report that we have only objects reachable from this o
bject
    --show-forced-updates
                          check for forced-updates on all updated branches
    --set-upstream        set upstream for git pull/fetch


User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$  git push -u origin main
To https://github.com/gunayyz/testgunay.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/gunayyz/testgunay.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git add .

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git commit -m "gghg"
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git branch -M main

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git remote add origin https://github.com/gunayyz/testgunay.git
error: remote origin already exists.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git push -u origin main
To https://github.com/gunayyz/testgunay.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/gunayyz/testgunay.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git pull -u origin main
error: unknown switch `u'
usage: git pull [<options>] [<repository> [<refspec>...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    --recurse-submodules[=<on-demand>]
                          control for recursive fetching of submodules

Options related to merging
    -r, --rebase[=(false|true|merges|interactive)]
                          incorporate changes by rebasing rather than merging
    -n                    do not show a diffstat at the end of the merge
    --stat                show a diffstat at the end of the merge
    --log[=<n>]           add (at most <n>) entries from shortlog to merge commi
t message
    --signoff[=...]       add a Signed-off-by trailer
    --squash              create a single commit instead of doing a merge
    --commit              perform a commit if the merge succeeds (default)
    --edit                edit message before committing
    --cleanup <mode>      how to strip spaces and #comments from message
    --ff                  allow fast-forward
    --ff-only             abort if fast-forward is not possible
    --verify              control use of pre-merge-commit and commit-msg hooks
    --verify-signatures   verify that the named commit has a valid GPG signature
    --autostash           automatically stash/stash pop before and after
    -s, --strategy <strategy>
                          merge strategy to use
    -X, --strategy-option <option=value>
                          option for selected merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --allow-unrelated-histories
                          allow merging unrelated histories

Options related to fetching
    --all                 fetch from all remotes
    -a, --append          append to .git/FETCH_HEAD instead of overwriting
    --upload-pack <path>  path to upload pack on remote end
    -f, --force           force overwrite of local branch
    -t, --tags            fetch all tags and associated objects
    -p, --prune           prune remote-tracking branches no longer on remote
    -j, --jobs[=<n>]      number of submodules pulled in parallel
    --dry-run             dry run
    -k, --keep            keep downloaded pack
    --depth <depth>       deepen history of shallow clone
    --shallow-since <time>
                          deepen history of shallow repository based on time
    --shallow-exclude <revision>
                          deepen history of shallow clone, excluding rev
    --deepen <n>          deepen history of shallow clone
    --unshallow           convert to a complete repository
    --update-shallow      accept refs that update .git/shallow
    --refmap <refmap>     specify fetch refmap
    -o, --server-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only
    --negotiation-tip <revision>
                          report that we have only objects reachable from this o
bject
    --show-forced-updates
                          check for forced-updates on all updated branches
    --set-upstream        set upstream for git pull/fetch


User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git pull origin main
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (1/1), done.
remote: Total 3 (delta 1), reused 3 (delta 1), pack-reused 0
Unpacking objects: 100% (3/3), 249 bytes | 24.00 KiB/s, done.
From https://github.com/gunayyz/testgunay
 * branch            main       -> FETCH_HEAD
   2b8dbed..b6a7921  main       -> origin/main
Merge made by the 'ort' strategy.
 ggggggggggg.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 ggggggggggg.txt

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git add .

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git commit -m "gggggggtfyhgfgfhg"
On branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git branch -M main

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git remote add origin https://github.com/gunayyz/testgunay.git
error: remote origin already exists.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$ git push -u origin main
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 16 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (5/5), 504 bytes | 504.00 KiB/s, done.
Total 5 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 1 local object.
To https://github.com/gunayyz/testgunay.git
   b6a7921..3ba4e5d  main -> main
branch 'main' set up to track 'origin/main'.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/testgunay (main)
$
